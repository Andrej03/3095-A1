version: '4.0'

services:

  # Booking Service
  booking-service:
    image: booking-service
    ports:
      - "8086:8086"
    build:
      context: ./booking-service
      dockerfile: ./Dockerfile
    container_name: booking-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  # Event Service
  event-service:
    image: event-service
    ports:
      - "8088:8088"
    build:
      context: ./event-service
      dockerfile: ./Dockerfile
    container_name: event-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  # Approval Service
  approval-service:
    image: approval-service
    ports:
      - "8089:8089"
    build:
      context: ./approval-service
      dockerfile: ./Dockerfile
    container_name: approval-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
        - ./data/mongo:/data/db
        - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
        - spring

  # Mongo Express for MongoDB GUI
  mongo-express:
    image: mongo-express
    ports:
      - "8083:8082"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    container_name: mongo-express
    depends_on:
      - mongodb
    networks:
      - spring

# Optional volumes
volumes:
  mongo-db:
    driver: local

networks:
  spring:
    driver: bridge
