version: '4.0'

services:

# POSTGRES SQL COMPOSE FILE / SQL
  postgres-room-service:
    image: postgres
    ports:
      - "5442:5432"
    container_name: postgres-room-service
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    volumes:
      - ./data/room-service:/var/lib/postgresql/data
      - ./init/room-service/init.sql:/docker-entrypoint-initdb.d/init.sql

  postgres-user-service:
    image: postgres
    ports:
      - "5443:5432"
    container_name: postgres-user-service
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    volumes:
      - ./data/user-service:/var/lib/postgresql/data
      - ./init/user-service/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    container_name: pgadmin-single
    environment:
      - PGADMIN_DEFAULT_EMAIL=a1@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=password

# MONGO DB COMPOSE FILES / NOSQL

  # Booking Service
  booking-service:
    image: booking-service
    ports:
      - "8085:8085"
    build:
      context: ./booking-service
      dockerfile: ./Dockerfile
    container_name: booking-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  # Event Service
  event-service:
    image: event-service
    ports:
      - "8086:8086"
    build:
      context: ./event-service
      dockerfile: ./Dockerfile
    container_name: event-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  # Approval Service
  approval-service:
    image: approval-service
    ports:
      - "8087:8087"
    build:
      context: ./approval-service
      dockerfile: ./Dockerfile
    container_name: approval-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: mongodb-a1
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
        - ./data/mongo:/data/db
        - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
        - spring

  # Mongo Express
  mongo-express:
    image: mongo-express-a1
    ports:
      - "8083:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    container_name: mongo-express
    depends_on:
      - mongodb
    networks:
      - spring

# Optional volumes
volumes:
  mongo-db:
    driver: local

networks:
  spring:
    driver: bridge
