spring.application.name=booking-service
booking-service-version=v1.0
# tomcat port for product-service
server.port=8085

# mongodb database properties
# if error change to this spring.data.mongodb.port=27017
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27019
spring.data.mongodb.database=booking-service
spring.data.mongodb.username=admin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin

booking.service.url=http://localhost:8085

springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs

# Resilience4j
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

resilience4j.timelimiter.instances.inventory.timeout-duration=3s
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5

resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=2s

# Kafka properties
spring.kafka.bootstrap-servers=localhost:9091
spring.kafka.template.default-topic=booking-event
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.type.mapping=event:ca.gbc.bookingservice.event.BookingEvent